# Project Euler: Problem 2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# I am aware that this function is already probably defined
#Lucas method
def get_nth_fibonacci(n):
    fi = (1 + 5 ** 0.5) / 2
    return round((fi ** n - (-fi) ** -n) / 5 ** 0.5, 0)


if __name__ == "__main__":
    i = 1
    sum = 0
    fib = int(get_nth_fibonacci(i))
    while fib < 4000000:
        if fib % 2 is 0:
            sum += fib
        i += 1
        fib = int(get_nth_fibonacci(i))

    print(sum)
